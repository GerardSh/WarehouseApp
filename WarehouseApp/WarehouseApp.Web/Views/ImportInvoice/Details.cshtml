@using static WarehouseApp.Common.Constants.ApplicationConstants
@model WarehouseApp.Web.ViewModels.ImportInvoice.ImportInvoiceDetailsViewModel

@{
    ViewData["Title"] = "Invoice Details";
}

@section HeadExtras {

    <style>
        .invoice-details-container {
            background-color: inherit;

            color: white;
        }

        .form-row {
            display: flex;
            flex-wrap: wrap;
            gap: 1.5rem;
        }

        .form-group {
            flex: 1 1 30%;
        }

        .form-group label {
            color: #0078D4;
            font-weight: bold;
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-control-plaintext {
            color: white;
            font-size: 1.05rem;
            background-color: transparent;
            border: none;
            padding-left: 0;
        }

        .product-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
            background-color: #2c2c3a;
            border-radius: 8px;
            overflow: hidden;
        }

        .product-table th,
        .product-table td {
            padding: 0.75rem 1rem;
            text-align: left;
            border-bottom: 1px solid #444;
            color: white;
        }

        .product-table th {
            background-color: #0078D4;
            color: white;
        }

        .btn-gradient {
            background: rgb(63, 81, 181);
            border: none;
            color: #fff;
            transition: background 0.4s ease, transform 0.2s ease;
            box-shadow: 0 4px 12px rgba(63, 81, 181, 0.4);
        }

        .button-group {
            display: inline-flex;
            gap: 0.75rem;
            align-items: center;
            margin-top: 2rem;
        }

            .button-group form {
                margin: 0;
                padding: 0;
                display: flex;
                align-items: center;
            }

            .button-group button {
                margin: 0;
                vertical-align: middle;
            }

            .button-group .btn {
                transition: transform 0.2s ease, box-shadow 0.3s ease, background-color 0.3s ease;
                cursor: pointer;
            }

                .button-group .btn:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
                }

                .button-group .btn:active {
                    transform: scale(0.98);
                    box-shadow: none;
                }

        .btn-primary {
            background: linear-gradient(135deg, #0078D4, #3F39E8);
            border: none;
            padding: 0.5rem 1.25rem;
            border-radius: 6px;
            color: white;
            font-weight: 500;
            transition: background-position 0.4s ease, transform 0.2s ease;
            background-size: 200%;
            background-position: left;
        }

            .btn-primary:hover {
                background-position: right;
            }

        .btn-danger {
            background: linear-gradient(135deg, #d9534f, #ff6f61);
            border: none;
            padding: 0.5rem 1.25rem;
            border-radius: 6px;
            color: white;
            font-weight: 500;
            transition: background-position 0.4s ease, transform 0.2s ease;
            background-size: 200%;
            background-position: left;
            margin-left: 0.5rem;
        }

            .btn-danger:hover {
                background-position: right;
            }

        .mt-3 {
            margin-top: 2rem;
        }

        .invoice-summary {
            margin-top: 1rem;
            padding: 1rem;
            background-color: transparent;
            color: white;
            font-size: 1.1rem;
            display: flex;
            justify-content: flex-end;
            gap: 2rem;
        }

        .currency-selector {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 1rem;
        }

        .currency-selector select {
            padding: 0.3rem 0.6rem;
            border-radius: 6px;
            border: 1px solid #ccc;
        }

        tbody {
            background-color: #1e1e2f;
        }

        div.form-row,
        tbody {
            background-color: #1e1e2f;
        }

        div.form-row {
            padding: 1.5rem;
            border-radius: 12px;
            color: white;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            margin-bottom: 2rem;
        }

        th {
            background-color: var(--accent-bg) !important;
            color: #0078D4 !important;
            padding: 0.2rem 0.5rem !important;
        }

        th {
            background-color: var(--accent-bg) !important;
            color: #0078D4 !important;
            padding: 0.2rem 0.5rem !important;
        }
        #currency {
            background-color: inherit;
            color: white;
            border-color:grey;
        }

        option {
            color: white;
            background-color: #3a3a3d;
        }
    </style>
}

<h2>Invoice Details</h2>

<div class="invoice-details-container">
    <div class="form-row">
        <div class="form-group form-column">
            <label>Invoice Number</label>
            <p class="form-control-plaintext">@Model.InvoiceNumber</p>
        </div>

        <div class="form-group form-column">
            <label>Date</label>
            <p class="form-control-plaintext">@Model.Date.ToString(DateFormat)</p>
        </div>

        <div class="form-group form-column">
            <label>Supplier Name</label>
            <p class="form-control-plaintext">@Model.SupplierName</p>
        </div>

        <div class="form-group form-column">
            <label>Supplier Address</label>
            <p class="form-control-plaintext">@Model.SupplierAddress</p>
        </div>

        <div class="form-group form-column">
            <label>Supplier Phone Number</label>
            <p class="form-control-plaintext">@Model.SupplierPhone</p>
        </div>

        <div class="form-group form-column">
            <label>Supplier Email</label>
            <p class="form-control-plaintext">@Model.SupplierEmail</p>
        </div>
    </div>
</div>

<h4>@Model.Products.Count Products</h4>

<table class="product-table">
    <thead>
        <tr>
            <th>Product Name</th>
            <th>Description</th>
            <th>Quantity</th>
            <th>Unit Price</th>
            <th>Total Price</th>
            <th>Category Name</th>
            <th>Category Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.ProductName</td>
                <td>@product.ProductDescription</td>
                <td>@product.Quantity</td>
                <td class="unit-price" data-value="@product.UnitPrice">@product.UnitPrice</td>
                <td class="total-price" data-value="@product.Total">@product.Total</td>
                <td>@product.CategoryName</td>
                <td>@product.CategoryDescription</td>
            </tr>
        }
    </tbody>
</table>

<div class="invoice-summary mt-2">
    <div><strong>Total Quantity:</strong> @Model.Products.Sum(p => p.Quantity)</div>
    <div><strong>Total Price:</strong> <span id="summaryTotal" data-value="@Model.Products.Sum(p => p.Total)">@Model.Products.Sum(p => p.Total)</span></div>
</div>

<div class="button-group">
    <a asp-action="Edit" asp-route-id="@Model.Id" asp-route-returnToDetails=true class="btn btn-primary">Edit</a>

    <form asp-action="Delete" asp-route-id="@Model.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this invoice?');">
        <button type="submit" class="btn btn-danger">Delete</button>
    </form>
</div>

<div class="currency-selector">
    <label for="currency" style="margin-right: 0.5rem; color: white;">Currency:</label>
    <select id="currency" onchange="changeCurrency()">
        <option value="€">EUR (€)</option>
        <option value="$">USD ($)</option>
        <option value="£">GBP (£)</option>
        <option value="BGN">BGN</option>
    </select>
</div>

@section Scripts {
    <script>
        function changeCurrency() {
            const symbol = document.getElementById("currency").value;

            document.querySelectorAll('.unit-price').forEach(td => {
                const val = parseFloat(td.getAttribute('data-value'));
                td.textContent = symbol + ' ' + val.toFixed(2);
            });

            document.querySelectorAll('.total-price').forEach(td => {
                const val = parseFloat(td.getAttribute('data-value'));
                td.textContent = symbol + ' ' + val.toFixed(2);
            });

            const totalSpan = document.getElementById('summaryTotal');
            const totalValue = parseFloat(totalSpan.getAttribute('data-value'));
            totalSpan.textContent = symbol + ' ' + totalValue.toFixed(2);
        }

        // Set initial currency
        window.addEventListener('DOMContentLoaded', changeCurrency);
    </script>
}
